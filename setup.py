import os
import io

from setuptools import setup, find_packages, Command
from os import path

root = 'MrY'
name = 'MrY'

exec(open("MrY/version.py").read())

here = path.abspath(path.dirname(__file__))
description = ('Mr.Y -- Management of references at YanaiLab')

install_requires = [
    'snakemake>=4.0.0',
    'pyyaml>=3.12',
    'tabulate>=0.7',
]

# do not require installation if built by ReadTheDocs
# (we mock these modules in docs/source/conf.py)
if 'READTHEDOCS' not in os.environ or \
        os.environ['READTHEDOCS'] != 'True':
    install_requires.extend([
    ])
else:
    install_requires.extend([
        #'pandas>=0.13, <1',
    ])

# get long description from file
long_description = ''
with io.open(path.join(here, 'README.md'), encoding='UTF-8') as fh:
    long_description = fh.read()


class CleanCommand(Command):
    """Removes files generated by setuptools.

    """
    # see https://github.com/trigger/trigger/blob/develop/setup.py
    user_options = []

    def initialize_options(self):
        pass

    def finalize_options(self):
        pass

    def run(self):
        error_msg = 'You must run this command in the package root!'
        if not os.getcwd() == here:
            raise OSError(error_msg)
        else:
            os.system('rm -rf ./dist ./build ./*.egg-info ')


setup(
    name=name,

    version=__version__,

    description=description,
    long_description=long_description,

    # homepage
    url='https://github.com/Puriney/Mr.Y',

    author='Yun Yan',
    author_email='yy1533@nyu.edu',

    license='GPLv3',

    # See https://pypi.python.org/pypi?%3Aaction=list_classifiers
    classifiers=[
        'Development Status :: 1 - Planning',

        'Intended Audience :: Developers',
        'Intended Audience :: Science/Research',
        'Topic :: Scientific/Engineering :: Bio-Informatics',
        'Topic :: Utilities',

        'License :: Other/Proprietary License',

        'Programming Language :: Python :: 3.5',
        'Programming Language :: Python :: 3 :: Only',
    ],

    keywords='GENCODE Ensemble NCBI genome transcriptome reference management',

    # packages=find_packages(exclude=['contrib', 'docs', 'tests*']),
    packages=find_packages(exclude=['docs', 'tests*']),
    # packages=find_packages(root),

    # libraries = [],

    install_requires=install_requires,

    # tests_require=[],

    extras_require={
        'docs': [
            'sphinx',
            'sphinx-rtd-theme',
            'sphinx-argparse',
            'mock',
        ],
        'tests': [
            'pytest>=3, <4',
            'pytest-cov>=2.2.1, <3',
        ],
    },

    # data
    package_data={
        'MrY': [
            'template/*',  # config.yaml, etc
            'workflow/*'  # snakemake workflow
        ]
    },
    # data outside the package
    # data_files=[('my_data', ['data/data_file'])],

    entry_points={
        'console_scripts': [
            ('yun = '
             'MrY.__init__:main'),
        ],
    },

    cmdclass={
        'clean': CleanCommand,
    },

)
